
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Pavel
 */
public class Warship extends javax.swing.JFrame implements Observer{
    private JButton[][] a =new JButton[10][10];
    private JButton[][] e=new JButton[10][10];
    private int [][] ships=new int[10][10];
    private int [][]enemyship=new int[10][10];
    private Connection con;
    private static CommandThread ct;
    private static Warship warship;
    private boolean enemyplay,yourplay=false;

    /**
     * Creates new form Warship
     */
    public Warship() {
        for (int i=0;i<=9;i++){
            for(int j=0;j<=0;j++){
                ships[i][j]=0;
                enemyship[i][j]=0;
            }
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        GridBagConstraints gbc;
        jLayeredPane1 = new javax.swing.JLayeredPane();
        turnfield = new javax.swing.JTextArea();
        YourMap = new javax.swing.JPanel();
        EnemyMap = new javax.swing.JPanel();
        playbut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Chat = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Fightlog = new javax.swing.JTextArea();
        sendbut = new javax.swing.JButton();
        connectbut = new javax.swing.JButton();
        ip = new javax.swing.JTextField();
        for (int i=0;i<=9;i++){
            for(int j=0;j<=9;j++){
                a[i][j]=new JButton(" ");
                e[i][j]=new JButton(" ");
                final int finalI = i;
                final int finalJ = j;
                a[i][j].addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if(!yourplay){
                        a[finalI][finalJ].setBackground(Color.green);
                        ships[finalI][finalJ]=1;}

                    }
                });
                e[finalI][finalJ].addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e){
                        con.sendmsg("^ATTACK:"+finalI+" "+finalJ);
                    }
                });
                a[i][j].setEnabled(false);
                e[i][j].setEnabled(false);
            }
        }
        turnfield.setEnabled(false);
        turnfield.setText("YOUR TURN");
        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
                jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
                jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1100, 700));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        setMaximumSize(new java.awt.Dimension(1100,700));

        turnfield.setColumns(20);
        turnfield.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        turnfield.setRows(5);

        YourMap.setLayout(new java.awt.GridBagLayout());
        for(int i=0;i<=9;i++){
            for(int j=0;j<=9;j++){
                gbc=new GridBagConstraints();
                gbc.gridy=i;
                gbc.gridx=j;
                YourMap.add(a[i][j],gbc);
            }
        }
        EnemyMap.setPreferredSize(new java.awt.Dimension(394, 304));
        EnemyMap.setLayout(new java.awt.GridBagLayout());
        for(int i=0;i<=9;i++){
            for(int j=0;j<=9;j++){
                gbc=new GridBagConstraints();
                gbc.gridy=i;
                gbc.gridx=j;
                EnemyMap.add(e[i][j],gbc);
            }
        }
        playbut.setText("Play");
        playbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playbutActionPerformed(evt);
            }
        });

        Chat.setColumns(20);
        Chat.setRows(5);
        Chat.setMinimumSize(new java.awt.Dimension(100, 50));
        jScrollPane1.setViewportView(Chat);

        Fightlog.setColumns(20);
        Fightlog.setRows(5);
        Fightlog.setMinimumSize(new java.awt.Dimension(100, 50));
        jScrollPane2.setViewportView(Fightlog);

        sendbut.setText("Send");
        sendbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbutActionPerformed(evt);
            }
        });

        connectbut.setText("Connect");
        connectbut.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    con=new Connection(ip.getText());
                    ip.setVisible(false);
                    connectbut.setVisible(false);
                    for(int i=0;i<=9;i++){
                        for (int j=0;j<=9;j++){
                            a[i][j].setEnabled(true);
                        }
                    }
                } catch (IOException e1) {
                    e1.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(YourMap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(ip))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGap(46, 46, 46)
                                                                .addComponent(playbut)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(connectbut)
                                                                .addGap(92, 92, 92)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(sendbut)
                                                                .addGap(59, 59, 59))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(turnfield, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                                        .addComponent(EnemyMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(303, 303, 303))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(YourMap, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(22, 22, 22)
                                                                .addComponent(playbut)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(turnfield, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(40, 40, 40)
                                                                .addComponent(connectbut)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(EnemyMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(sendbut)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1))
                                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void playbutActionPerformed(java.awt.event.ActionEvent evt) {
       yourplay=true;
        con.sendmsg("^IPLAY");
    }

    private void sendbutActionPerformed(java.awt.event.ActionEvent evt) {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Warship.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Warship.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Warship.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Warship.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               warship=new Warship();
                ct=new CommandThread();
                ct.addObserver(warship);
                warship.setVisible(true);
                ct.start();

            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextArea Chat;
    private javax.swing.JPanel EnemyMap;
    private javax.swing.JTextArea Fightlog;
    private javax.swing.JPanel YourMap;
    private javax.swing.JButton connectbut;
    private javax.swing.JTextField ip;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton playbut;
    private javax.swing.JButton sendbut;
    private javax.swing.JTextArea turnfield;
    private String text;

    @Override
    public void update(Observable o, Object arg) {
         text =(String)arg;
        if(text.length()>=5){
            if (text.substring(0, 4).equals("^HIT")) {
                enemyship[Integer.parseInt(text.substring(5, 6))][Integer.parseInt(text.substring(7, 8))] = 2;
                e[Integer.parseInt(text.substring(5, 6))][Integer.parseInt(text.substring(7, 8))].setBackground(Color.red);
            } else {
                if (text.substring(0, 5).equals("^MISS")) {
                    enemyship[Integer.parseInt(text.substring(6, 7))][Integer.parseInt(text.substring(8, 9))] = 1;
                    e[Integer.parseInt(text.substring(6, 7))][Integer.parseInt(text.substring(8, 9))].setBackground(Color.blue);
                    turnfield.setText("ENEMY TURN");
                } else {
                    if (text.equals("^IPLAY")) {
                        enemyplay = true;
                        for (int i = 0; i <= 9; i++) {
                            for (int j = 0; j <= 9; j++) {
                                e[i][j].setEnabled(true);
                            }
                        }
                    } else {
                        if (text.substring(0, 7).equals("^ATTACK")) {
                            int i = Integer.parseInt(text.substring(8, 9));
                            int j = Integer.parseInt(text.substring(10, 11));
                            if (ships[i][j] == 1) {
                                ships[i][j] = 2;
                                a[i][j].setBackground(Color.red);
                                con.sendmsg("^HIT:" + i + " " + j);
                            }
                            if (ships[i][j] == 0) {
                                ships[i][j] = 3;
                                a[i][j].setBackground(Color.blue);
                                con.sendmsg("^MISS:" + i + " " + j);
                            }
                        }
                    }
                }
            }
        }
    }
    // End of variables declaration                   
}